{"version":3,"sources":["components/navbar.js","components/header.js","components/article.js","components/bodyContent.js","components/blog.js","index.js"],"names":["NavbarItem","props","className","selected","label","onClick","callback","to","link","Navbar","menuItemElements","menuItems","map","values","index","href","onChangeHandler","currentMenuIndex","id","Header","blogName","ArticleCard","state","title","bodyText","date","this","React","Component","BodyContent","articleList","articles","articleElements","value","Blog","data","fetch","then","res","json","console","log","setState","navbarData","blog","artwork","about","App","currentPageIndex","setPageIndex","bind","path","window","location","pathname","split","hasOwnProperty","newPageIndex","Object","keys","authorName","ReactDOM","render","element","document","getElementById"],"mappings":"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","file":"static/js/main.97a4faad.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Navbar(props){\r\n  \r\n  let menuItemElements = props.menuItems.map((values, index) => {\r\n      return (\r\n        <NavbarItem\r\n          label={values.label}\r\n          link={values.href}\r\n          callback={()=>{props.onChangeHandler(index);}}\r\n          selected={props.currentMenuIndex === index}\r\n          key={index}\r\n        />\r\n      );\r\n    });\r\n\r\n  return (\r\n    <div id=\"navbar\">\r\n      <ul className=\"nav\">\r\n        {menuItemElements}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction NavbarItem(props){\r\n  return (\r\n    <li className=\"nav-item\">\r\n      {!props.selected ? (\r\n        <Link className=\"nav-link active\" onClick={props.callback} to={props.link}>\r\n          {props.label}\r\n        </Link>\r\n      ) : (\r\n          <a className=\"nav-link disabled\" aria-disabled=\"true\">{props.label + \" \"}</a>\r\n      )}\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <div id=\"pageHeader\">\r\n      <h1 id=\"headerText\">{props.blogName}</h1>\r\n      {/* <h3 id=\"headerSubtext\">{props.authorName}</h3> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nclass ArticleCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: props.title,\r\n      bodyText: props.bodyText,\r\n      date: props.date\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"articleCol col-lg-3 mb-3 align-items-stretch\">\r\n        <div className=\"articleCard card\">\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{this.state.title}</h5>\r\n            <p className=\"articleCardBody text-truncate\">{this.state.bodyText}</p>\r\n            <p className=\"articleCardLink\"><a href=\"#\">more...</a></p>\r\n            <h6>{this.state.date}</h6>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default ArticleCard;","import React from \"react\";\r\nimport ArticleCard from \"./article.js\";\r\n\r\nclass BodyContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            articleList: this.props.articles\r\n        }\r\n        this.articleElements = this.state.articleList.map((value, index) => {\r\n            return<ArticleCard title={value.title} bodyText={value.bodyText} date={value.date} key={index} />\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"bodyContent row gx-1 gy-1\">\r\n                    {this.articleElements}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BodyContent;","import React from 'react';\r\nimport BodyContent from './bodyContent'\r\nclass Blog extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data : null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"/api/articles\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        this.setState({ data: {articles : data} });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.data ? (\r\n          <BodyContent articles={this.state.data.articles} />\r\n        ) : (\r\n          <p>Loading...</p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Blog;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport \"./index.css\";\n//main page elements\nimport Navbar from \"./components/navbar\";\nimport Header from \"./components/header\";\n//routes\nimport Blog from \"./components/blog\";\nimport Article from \"./components/article\";\n\nconst blogName = \"Blog Name TBD\";\nconst authorName = \"Ayden Diel\";\nconst navbarData = {\n  blog: { label: \"Blog\", href: \"/blog\", index: 0 },\n  artwork: { label: \"Artwork\", href: \"/artwork\", index: 1 },\n  about: { label: \"About\", href: \"/about\", index: 2 }\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPageIndex: 0\n    };\n\n    this.setPageIndex = this.setPageIndex.bind(this);\n\n  }\n\n  componentDidMount() {\n    let path = window.location.pathname.split('/')[1];\n    if (navbarData.hasOwnProperty(path)) {\n      this.setPageIndex(navbarData[path].index);\n    }\n  }\n\n  setPageIndex(newPageIndex) {\n    this.setState({ currentPageIndex: newPageIndex });\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar\n          currentMenuIndex={this.state.currentPageIndex}\n          menuItems={Object.keys(navbarData).map(value => navbarData[value])}\n          onChangeHandler={this.setPageIndex}\n        />\n        <Header blogName={blogName} authorName={authorName} />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n    <Routes>\n      <Route path=\"/\" element={<Blog />} />\n      <Route path=\"/blog\">\n        <Route path=\"0\" element={<Article />} />\n        <Route index element={<Blog />} />\n      </Route>\n      <Route path=\"/artwork\" element={<p>Artwork section coming soon!</p>} />\n      <Route path=\"/about\" element={<p>About section coming soon!</p>} />\n    </Routes>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}